version: "3.8"

services:
  # user-service:
  #   build: ./user-service
  #   container_name: user-service-container
  #   environment:
  #     - DB_HOST=database
  #     - DB_NAME=userdb
  #     - SERVER_PORT=3001
  #   volumes:
  #     - ./user-service:/app
  #   ports:
  #     - 3001:3001
  #   depends_on:
  #     - database
  #   links:
  #     - database

  # store-service:
  #   build: ./store-service
  #   container_name: store-service-container
  #   volumes:
  #     - ./store-service:/app
  #   environment:
  #     - DB_HOST=database
  #     - DB_NAME=storedb
  #     - SERVER_PORT=3002
  #   ports:
  #     - 3002:3002
  #   depends_on:
  #     - database
  #   links:
  #     - database

  # ui-service:
  #   build: ./app
  #   container_name: ui-service-container
  #   volumes:
  #     - ./app:/app
  #   ports:
  #     - 3000:4173
  #   depends_on:
  #     - user-service
  #     - store-service
  #   links:
  #     - user-service
  #     - store-service

  # mongo-database:
  #   image: mongo
  #   container_name: mongo-database-container
  #   volumes:
  #     - mongodbdata:/data/db
  #   restart: always
  #   ports:
  #     - 27017:27017

  mysql-database:
    image: mysql
    container_name: mysql-database-container
    volumes:
      - mysqldbdata:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: storedb
    ports:
      - 3304:3306

  # nginx:
  #   restart: always
  #   image: nginx:latest
  #   container_name: nginx-container
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "8888:80"

  # redis-cache:
  #   image: redis:6.2-alpine
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   command: redis-server --save 20 1 --loglevel warning
  #   volumes:
  #     - cache:/data
volumes:
  # mongodbdata:
  mysqldbdata:
  # cache:
  #   driver: local
